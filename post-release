#!/bin/bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

APP="$1"
IMAGE="dokku/$1"
SCALE_FILE="$DOKKU_ROOT/$APP/SCALE"

PLUGIN_DIR=$(dirname $0)
. "$PLUGIN_DIR/lib/helpers"

# Check for Procfile
id=$(docker run -d $IMAGE test -f app/Procfile)
if [ $(docker wait $id) -ne 0 ]; then
  exit 0
fi

copy_to_container "$PLUGIN_DIR/lib/procfile-to-supervisord" /usr/local/bin/procfile-to-supervisord
if [ -f "$SCALE_FILE" ]; then
  echo "       Found SCALE file: $SCALE_FILE"
  copy_to_container "$SCALE_FILE" /app/SCALE
else
  # Check for SCALE file in IMAGE
  SCALE_IN_IMAGE=$(docker run -i -t $IMAGE /exec ls SCALE > /dev/null 2>&1 ; echo $?)
  if [ "$SCALE_IN_IMAGE" -eq 0 ];then
    echo "       Found SCALE file in IMAGE"
  else
    echo "       No SCALE file found; will use default of one process per entry in Procfile."
  fi
fi

echo "-----> Injecting Logging Supervisor ..."

if docker run -a stdout -i $IMAGE /usr/bin/dpkg -s supervisor > /dev/null; then
  echo "       supervisor is already installed (skipping apt-get update/install)"
else
  echo "       supervisor is not installed (will install via apt-get)"
  run_in_container "apt-get update && apt-get install -y supervisor && apt-get clean"
fi

# Unlink /exec from /start
# Original builstep uses `ln -nsf /start /exec` that forks supervisor repeatedly
run_in_container "if [[ -L /exec ]];then rm -f /exec && cp -f /start /exec; fi"

# Replace /start with our custom start program:
copy_to_container "$PLUGIN_DIR/lib/start" /start

# create  log rotate  config file,  save hash  of this  config, so  in
# pre-delete hook we keep user changed files
sudo $PLUGIN_DIR/lib/dokku-cfg-logrotate create "$APP" "$DOKKU_ROOT/$APP/logrotate.md5"
